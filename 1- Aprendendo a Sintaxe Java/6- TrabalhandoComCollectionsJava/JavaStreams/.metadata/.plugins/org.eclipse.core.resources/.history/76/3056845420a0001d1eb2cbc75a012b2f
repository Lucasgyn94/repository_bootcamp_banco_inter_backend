package mainExercicioStreamApi;

import java.util.Arrays;
import java.util.List;
import java.util.function.Predicate;
import java.util.stream.Collectors;

public class ExercicioStream {
	public static void main(String[] args) {
		List<String> numerosAleatorios =
				Arrays.asList("1", "0","4", "1", "2", "3","9","9","6","5");
	
		System.out.println("=== Elementos da lista de String ===");
		
		numerosAleatorios.stream().forEach(System.out::println);
		
		// 5 primeiros números e coloque dentro de um set
		System.out.println("=== 5 PRIMEIROS NÚMEROS DENTRO DE UM SET ===");
		numerosAleatorios.stream()
			.limit(5)
			.collect(Collectors.toSet())
			.forEach(System.out::println);
		
		// Transformar lista de string em lista de numeros inteiros
		System.out.println("\n=== TRANSFORMANDO LISTA DE STRING PARA INTEIROS ===");
		/*
		numerosAleatorios.stream()
		.map(Integer::parseInt)
		.collect(Collectors.toList())
		.forEach(System.out::println);
		;
		*/
		List<Integer> collectList = numerosAleatorios.stream()
			.map(Integer::parseInt)
			.collect(Collectors.toList());
		
		// numeros pares e maiores que 2 e coloque em uma lista
		List<String> numerosAleatorios2 =
				Arrays.asList("1", "0","4", "1", "2", "3","9","9","6","5");
		/*
		List<Integer> listParesMaioresQue2 = numerosAleatorios2.stream()
				.map(Integer::parseInt)
				.filter(new Predicate<Integer> () {
					@Override
					public boolean test (Integer i) {
						if (i % 2 == 0 && i > 2) {
							return true;
						} else {
							return false;
						}
						
					}
				}).collect(Collectors.toList());
		
		*/
		List<Integer> listParesMaioresQue2 = numerosAleatorios2.stream()
			.map(Integer::parseInt)
			.filter(i -> (i % 2 == 0 && i > 2))
			.collect(Collectors.toList());
		
		System.out.println(listParesMaioresQue2);
			
		
	}
}
